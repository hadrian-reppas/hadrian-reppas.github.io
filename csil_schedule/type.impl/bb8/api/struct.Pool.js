(function() {var type_impls = {
"diesel_async":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pool%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#42\">source</a><a href=\"#impl-Pool%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"struct\" href=\"bb8/api/struct.Pool.html\" title=\"struct bb8::api::Pool\">Pool</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.builder\" class=\"method\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#44\">source</a><h4 class=\"code-header\">pub fn <a href=\"bb8/api/struct.Pool.html#tymethod.builder\" class=\"fn\">builder</a>() -&gt; <a class=\"struct\" href=\"bb8/api/struct.Builder.html\" title=\"struct bb8::api::Builder\">Builder</a>&lt;M&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a <code>Builder</code> instance to configure a new pool.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.state\" class=\"method\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#49\">source</a><h4 class=\"code-header\">pub fn <a href=\"bb8/api/struct.Pool.html#tymethod.state\" class=\"fn\">state</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bb8/internals/struct.State.html\" title=\"struct bb8::internals::State\">State</a></h4></section></summary><div class=\"docblock\"><p>Returns information about the current state of the pool.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#54\">source</a><h4 class=\"code-header\">pub async fn <a href=\"bb8/api/struct.Pool.html#tymethod.get\" class=\"fn\">get</a>(\n    &amp;self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bb8/api/struct.PooledConnection.html\" title=\"struct bb8::api::PooledConnection\">PooledConnection</a>&lt;'_, M&gt;, <a class=\"enum\" href=\"bb8/api/enum.RunError.html\" title=\"enum bb8::api::RunError\">RunError</a>&lt;&lt;M as <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>&gt;::<a class=\"associatedtype\" href=\"bb8/api/trait.ManageConnection.html#associatedtype.Error\" title=\"type bb8::api::ManageConnection::Error\">Error</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieves a connection from the pool.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_owned\" class=\"method\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#62\">source</a><h4 class=\"code-header\">pub async fn <a href=\"bb8/api/struct.Pool.html#tymethod.get_owned\" class=\"fn\">get_owned</a>(\n    &amp;self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"bb8/api/struct.PooledConnection.html\" title=\"struct bb8::api::PooledConnection\">PooledConnection</a>&lt;'static, M&gt;, <a class=\"enum\" href=\"bb8/api/enum.RunError.html\" title=\"enum bb8::api::RunError\">RunError</a>&lt;&lt;M as <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>&gt;::<a class=\"associatedtype\" href=\"bb8/api/trait.ManageConnection.html#associatedtype.Error\" title=\"type bb8::api::ManageConnection::Error\">Error</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieves an owned connection from the pool</p>\n<p>Using an owning <code>PooledConnection</code> makes it easier to leak the connection pool. Therefore, <a href=\"bb8/api/struct.Pool.html#method.get\" title=\"method bb8::api::Pool::get\"><code>Pool::get</code></a>\n(which stores a lifetime-bound reference to the pool) should be preferred whenever possible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dedicated_connection\" class=\"method\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#72\">source</a><h4 class=\"code-header\">pub async fn <a href=\"bb8/api/struct.Pool.html#tymethod.dedicated_connection\" class=\"fn\">dedicated_connection</a>(\n    &amp;self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;M as <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>&gt;::<a class=\"associatedtype\" href=\"bb8/api/trait.ManageConnection.html#associatedtype.Connection\" title=\"type bb8::api::ManageConnection::Connection\">Connection</a>, &lt;M as <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>&gt;::<a class=\"associatedtype\" href=\"bb8/api/trait.ManageConnection.html#associatedtype.Error\" title=\"type bb8::api::ManageConnection::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a new dedicated connection that will not be managed by the pool.\nAn application may want a persistent connection (e.g. to do a\npostgres LISTEN) that will not be closed or repurposed by the pool.</p>\n<p>This method allows reusing the manager’s configuration but otherwise\nbypassing the pool</p>\n</div></details></div></details>",0,"diesel_async::pooled_connection::bb8::Pool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pool%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#22-24\">source</a><a href=\"#impl-Clone-for-Pool%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bb8/api/struct.Pool.html\" title=\"struct bb8::api::Pool\">Pool</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#26\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bb8/api/struct.Pool.html\" title=\"struct bb8::api::Pool\">Pool</a>&lt;M&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","diesel_async::pooled_connection::bb8::Pool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pool%3CM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#33-35\">source</a><a href=\"#impl-Debug-for-Pool%3CM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bb8/api/struct.Pool.html\" title=\"struct bb8::api::Pool\">Pool</a>&lt;M&gt;<span class=\"where fmt-newline\">where\n    M: <a class=\"trait\" href=\"bb8/api/trait.ManageConnection.html\" title=\"trait bb8::api::ManageConnection\">ManageConnection</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bb8/api.rs.html#37\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","diesel_async::pooled_connection::bb8::Pool"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()